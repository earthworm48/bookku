c
User.find(@conversation.receipts.first.receiver_id).usernamec
User.find(@conversation.receipts.first.receiver_id).username
User.find(@conversation.receipts.first.receiver_id).name
User.find(@conversation.receipts.first.receiver_id)
@conversation.receipts.first.user.find(receiver_id)
@conversation.receipts.first
@conversation.receipts
@conversation.receipts.last
@conversation.receipts
@conversation.receipt
@conversation.receipts.first.receiver_id
@conversation.receipts.first
@conversation.receipts.first.users
@conversation.receipts.first.user
@conversation.receipts.first.user.find(receiver_id)
@conversation.receipts.first.users.find(receiver_id)
@conversation.receipts.first.users.find(receipt_id)
@conversation.receipts.first.user.find(receipt_id)
@conversation.receipts.first.user
User.find(aaa)
aaa
aaa =@conversation.receipts.first.receiver_id
@conversation.receipts.first.receiver_id
aaa
aaa = @conversation.receipts.first.find.receiver_id
@conversation.receipts.first.receiver_id
@conversation.receipts.first.receiver_id.name
@conversation.receipts.first.receiver_id.username
@conversation.receipts.first.receiver_id
@conversation.receipts.first
@conversation.receipts
@receipts = conversation.receipts_for
@conversation
@conversation.receipts_for(current_user).each {|receipt| receipt.message }
@conversation.receipts_for(current_user).each {|receipt| receipt.message.username }
@conversation.receipts_for(current_user).each {|receipt| receipt.message }
@conversation.receipts_for(current_user).each {|receipt| receipt.username }
@conversation.receipts_for(current_user).each {|receipt| receipt }
@conversation.messages.each { |message| message.sender_id }
@conversation.messages.find(sender_id)
@conversation.messages.find(id)
@conversation.messages.find(sender_id)
@conversation.messages.each { |message| message }
@conversation.messages.each { |message| message.sender_id }
@conversation.messages.each { |message| message.sender_id.username }
@conversation.messages.each { |message| message.sender_id.name }
@conversation.messages.each { |message| message.sender_id }
@conversation.messages.class
@conversation.messages.each { |message| message.sender_id }
@conversation.
@conversation.messages
@conversation
@conversation.messages.notified_object_id
@conversation.messages
@conversation.username
@conversation.sender_id.username
@conversation.sender
@conversation.messages
@conversation.inspect
@conversation.senders
@conversation
c
receipt
n
receipt
n
c
n
message.body
n
@conversation
@conversation.receipts_for(current_user).messages
@conversation.receipts_for(current_user).message
@conversation.receipts_for(current_user)
      <% end %>
        </div>
          </div>
            <%= message.body %>
              says at <%= message.created_at.strftime("%-d %B %Y, %H:%M:%S") %></h6>
            <h6 class="media-heading"><%= message.sender.username %>
          <div class="media-body">
          </div>
            <%= message.sender.username %>
          <div class="media-left">
          <% message = receipt.message %>
        <div class="media">
      <% @conversation.receipts_for(current_user).each do |receipt| %>
@conversation.receipts_for(current_user)
a.message
a.sender.message
a.sender
a.User
a
a = @conversation.receipts_for(current_user)
@conversation.receipts_for(current_user).message.usernam
@conversation.receipts_for(current_user).message.username
@conversation.receipts_for(current_user).message
@conversation.receipts_for(current_user)
@conversation.receipts_for
@conversation.receipts_for(current_user).each do |receipt|
@conversation.subject
@conversation
c
conversation
n
Conversation.find(58)
conversation
conversation = current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
conversation
current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
n
c
n
recipients
n
params[:message][:subject]
params[:message][:body]
recipients
n
recipients
User.where(id: params['recipients'])
c
params
c
User.where(id: params['recipients'])
recipients
n
recipients = User.where(id: params['recipients'])
User.where(id: params['recipients'])
User.where(id: params['recipients.id'])
User.where(id: params['recipients'])
recipients
params
@chosen_recipient
c
params
c
params
c
:@chosen_recipient
@chosen_recipient
c
@chosen_recipient
params
c
User.find_by(id: params[:to].to_i) if params[:to]
@chosen_recipient
c
email = mailer.send_email(recipient)
c
 email = mailer.send_email(recipient)
c
email.deliver
email.deliver_now
email = mailer.send_email(recipient)
c
email.respond_to?(:deliver_now)
email
email = mailer.send_email(mailable,recipient)
email = mailer.send_email(recipient)
c
Mailboxer.email_method
Mailboxer
email_to = recipient.send(Mailboxer.email_method)
mailable.class
mailable
email_to = recipient.send(mailable)
email_to = recipient.send(Mailboxer.email_method)
recipient
c
n
nn
n
recipientn
mailable
n
c
email_to = recipient.send(Mailboxer.email_method)
email_to = recipient.send(Mailboxer.email_method, mailable)
mailable
Mailboxer.email_method
n
c
recipient
filtered_recipients.count
filtered_recipients.class
filtered_recipients
c
current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
c
current_user.send_message(recipients, params[:message][:body], params[:message][:subject])
conversation
conversation = current_user.send_message(recipients, params[:message][:body], params[:message][:subject])
c
n
current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
c
current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
c
conversation = current_user.send_message(recipients, params[:message][:body], params[:message][:subject])
conversation = current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
conversation
params[:message][:subject]
params[:message][:body]
params
recipients
current_user
c
n
recipients
c
@chosen_recipient
c
params
c
params[:value]
params
c
params
c
params
c
data-id
params
c
result
exit
n
result
c
result
n
@transaction
n
@transaction
c
params[:value]
c
conversation
n
conversation
n
current_user.send_message(recipients, params[:message][:body], params[:message][:subject]).conversation
current_user.send_message(recipients, params[:message]
User.where(id: params['recipients'])
recipients
c
n
@transaction.user.points += @transaction.points
n
result
n
c
result.success?
result
